a = 22
b = a
b = 23
# a и b указывают на разные области памяти
print(a)
print(b)

arr1 = [1, 2, 3, 4]
arr2 = arr1
arr2[3] = 77
# Мы поменяли значение arr2 не целиком, а лишь частично
# целиком он всё ещё ссылается на значение в a1
# чтобы переопределить такое поведение необходимо
# вместо новой ссылки создать копию объекта
print(arr1)
print(arr2)

arr2 = arr1.copy()
arr2[3] = 92000
print(arr1)
print(arr2)


# К контейнерным типам данных (итерируемые)
# Можно применять два вида копирования: полное и поверхностное
#1. поверхностное - создается новый объект, но заполняется ссылками на старый
lst1 = [100, 200, [300, 700], 400]
lst2 = list(lst1)
lst2[2][1] = 55555
# список тоже поменялся
print(lst1)
print(lst2)
lst2[0] = 1023123
# метод copy делает поверхностное копирование
# 2. полное копирование
# При глубоком копировании создается новый объект и рекурсивно
# создаются копии всех объектов, содержащихся в оригинале
import copy
lst2 = copy.deepcopy(lst1)
